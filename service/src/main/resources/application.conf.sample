akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = DEBUG
  actor.debug {
    #receive = on
    #autoreceive = on
  }
}

VZD {
  driver = oracle.jdbc.OracleDriver
  # if db url not specified open-data configuration from reference.conf is used
  # url =  jdbc:oracle:thin:...
  user = vraa_amk_izstr
  password = "***"

  db {
    driver = org.h2.Driver
    url = "jdbc:h2:./cache/adrh2"
    user = ""
    password = ""

    # directory where to store address index
    index-dir = "./cache"
  }
}

#mandatory setting if ssl.client-auth=true
akka.http.server.parsing.tls-session-info-header = on

ssl {
  #keystore containing server key and certificate
  key-store = "<ssl server auth keys file>"
  key-store-password = "***"
  key-store-type = "JKS"
  #trusted keystore containing client authentication certificate issuer certificate
  trust-store = "<trusted certificates - server ca, client ca>"
  trust-store-password = "***"
  trust-store-type = "JKS"
  client-auth = true
  port = 8443

  #file for blocked users. each user must be written according to RFC 2253 standart on separate line.
  #only user needed to be blocked while having valid certificate must be put into this file
  blocked-users = "<path to valid user list file>"
  #administrator name according to RFC 2253 standart. can call reload-blocked-users function
  admin-name = "CN=test-client,OU=test,O=test,L=test,C=LV"
}

address-service-port = 8082

#optional parameter to enable artifact download
address-artifact-file-name = "<full path to addresses jar>"
